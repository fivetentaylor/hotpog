// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: auth.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getValidSession = `-- name: GetValidSession :one
SELECT s.id, s.user_id, u.email 
FROM sessions s
JOIN users u ON s.user_id = u.id
WHERE s.id = $1 
 AND s.expires_at > NOW()
 AND u.email_verified_at IS NOT NULL
`

type GetValidSessionRow struct {
	ID     uuid.UUID
	UserID uuid.UUID
	Email  string
}

// internal/db/queries/auth.sql
func (q *Queries) GetValidSession(ctx context.Context, id uuid.UUID) (GetValidSessionRow, error) {
	row := q.db.QueryRowContext(ctx, getValidSession, id)
	var i GetValidSessionRow
	err := row.Scan(&i.ID, &i.UserID, &i.Email)
	return i, err
}
